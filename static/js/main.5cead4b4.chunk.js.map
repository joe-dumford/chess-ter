{"version":3,"sources":["components/square.js","components/board.js","components/fallen-soldiers.js","pieces/piece.js","pieces/bishop.js","pieces/king.js","pieces/knight.js","pieces/pawn.js","pieces/queen.js","pieces/rook.js","helpers/board-initialiser.js","components/game.js","index.js"],"names":["Square","props","className","shade","onClick","style","Board","i","squareShade","this","squares","board","squareRows","j","isEven","push","renderSquare","React","Component","num","FallenSoldiers","square","piece","whiteFallenSoldiers","map","ws","index","blackFallenSoldiers","bs","Piece","player","iconUrl","backgroundImage","Bishop","src","dest","Math","abs","pathStart","pathEnd","incrementBy","path","King","Knight","Pawn","initialPositions","1","2","isDestEnemyOccupied","indexOf","Queen","mod","diff","Rook","initialiseChessBoard","Array","fill","Game","state","sourceSelection","status","turn","slice","backgroundColor","setState","isMovePossible","srcToDestPath","getSrcToDestPath","isMoveLegal","console","log","isLegal","length","handleClick","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cead4b4.chunk.js","sourcesContent":["import React from 'react';\nimport '../index.css';\n\nexport default function Square(props) {\n    return (\n      <button className={\"square \" + props.shade}\n      onClick={props.onClick}\n      style={props.style}>\n      </button>\n    ); \n}\n\n//Above we are adding a Stateless Component (Square). It renders one square in its color and piece (if exists), the complete info of which is recieved through props in the form of a style object, onClick and shade of square(dark/light).","import React from 'react';\nimport '../index.css';\nimport Square from './square.js';\n\nexport default class Board extends React.Component {\n\n    renderSquare(i, squareShade) {\n        return <Square\n        style = {this.props.squares[i]? this.props.squares[i].style : null}\n        shade = {squareShade}\n        onClick={() => this.props.onClick(i)}\n        />\n    }\n\n    render() {\n        const board = [];\n        for(let i = 0; i < 8; i++){\n            const squareRows = [];\n            for(let j = 0; j < 8; j++){\n                const squareShade = (isEven(i) && isEven(j)) || (!isEven(i) && !isEven(j))? \"light-square\" : \"dark-square\";\n                    squareRows.push(this.renderSquare((i*8) + j, squareShade));\n                }\n            board.push(<div className=\"board-row\">{squareRows}</div>)       \n        }\n\n        return (\n            <div>\n                {board}\n            </div>\n        );\n    }\n}\n\n    function isEven(num) {\n        return num % 2 === 0\n    }\n\n//Above we are adding a Board Component. It basically just renders the grid of 64 squares that it recieves from props, deciding the shade of each square and sending the relevant props (style, shade and onClick) to Square.","import React from 'react';\nimport '../index.css';\nimport Square from './square.js';\n\nexport default class FallenSoldiers extends React.Component {\n    renderSquare(square, i, squareShade) {\n        return <Square\n        piece = {square}\n        style = {square.style}\n        />\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">{this.props.whiteFallenSoldiers.map((ws, index) => this.renderSquare(ws, index))}\n                </div>\n\n                <div className=\"board-row\">{this.props.blackFallenSoldiers.map((bs, index) => this.renderSquare(bs, index))}\n                </div>\n            </div>\n        );\n    }\n}\n\n//Above we have a Stateful Components called FallenSoldiers. It recieves two arrays in props: whiteFallenSoldiers and blackFallenSoldiers, using .map() to loop through to render squares in two rows.","// Here we are keeping the players and icon image link (black pawn, white rook etc.) info. These both come from specialized subclasses like Pawn or Rook.\n\nexport default class Piece {\n    constructor(player, iconUrl){\n      this.player = player;\n      this.style = {backgroundImage: \"url('\"+iconUrl+\"')\"};\n    }\n  }\n  ","import Piece from './piece.js';\n\nexport default class Bishop extends Piece {\n    // Creating a constructor for player. Determining if it is the first or second player and assigning appropriate piece image\n    constructor(player) {\n        super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"));\n    }\n\n    isMovePossible(src, dest) {\n        return (Math.abs(src - dest) % 9 === 0 || Math.abs(src - dest) % 7 === 0);\n    }\n\n    getSrcToDestPath(src, dest) {\n        let path = [],\n            pathStart, pathEnd, incrementBy;\n        if (src > dest) {\n            pathStart = dest;\n            pathEnd = src;\n        } else {\n            pathStart = src;\n            pathEnd = dest;\n        }\n        if (Math.abs(src - dest) % 9 === 0) {\n            incrementBy = 9;\n            pathStart += 9;\n        } else {\n            incrementBy = 7;\n            pathStart += 7;\n        }\n\n        for (let i = pathStart; i < pathEnd; i += incrementBy) {\n            path.push(i);\n        }\n        return path;\n    }\n}","import Piece from './piece.js';\n\nexport default class King extends Piece {\n     // Creating a constructor for player. Determining if it is the first or second player and assigning appropriate piece image\n    constructor(player) {\n        super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\"));\n    }\n\n    isMovePossible(src, dest) {\n        return (src - 9 === dest ||\n            src - 8 === dest ||\n            src - 7 === dest ||\n            src + 1 === dest ||\n            src + 9 === dest ||\n            src + 8 === dest ||\n            src + 7 === dest ||\n            src - 1 === dest);\n    }\n\n    getSrcToDestPath(src, dest) {\n        return [];\n    }\n}","import Piece from './piece.js';\n\nexport default class Knight extends Piece {\n     // Creating a constructor for player. Determining if it is the first or second player and assigning appropriate piece image\n    constructor(player) {\n        super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\" :  \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"));\n    }\n\n    isMovePossible(src, dest) {\n        return (src - 17 === dest ||\n            src - 10 === dest ||\n            src + 6 === dest ||\n            src + 15 === dest ||\n            src - 15 === dest ||\n            src - 6 === dest ||\n            src + 10 === dest ||\n            src + 17 === dest);\n    }\n\n    // Return an empty array because Knights can move over (jump) other pieces\n    getSrcToDestPath() {\n        return [];\n    }\n}","import Piece from './piece';\n\nexport default class Pawn extends Piece {\n    // Creating a constructor for player. Determining if it is the first or second player and assigning appropriate piece image.\n    //Also setting Initial Position since Pawns can move two spaces on first move.\n    constructor(player) {\n        super(player, (player === 1 ?  \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\n        this.initialPositions = {\n            1: [48, 49, 50, 51, 52, 53, 54, 55],\n            2: [8, 9, 10, 11, 12, 13, 14, 15]\n        }\n    }\n\n    isMovePossible(src, dest, isDestEnemyOccupied) {\n\n        if (this.player === 1) {\n            if ((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && this.initialPositions[1].indexOf(src) !== -1)) {\n                return true;\n            } else if (isDestEnemyOccupied && (dest === src - 9 || dest === src - 7)) {\n                return true;\n            }\n        } else if (this.player === 2) {\n            if ((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && this.initialPositions[2].indexOf(src) !== -1)) {\n                return true;\n            } else if (isDestEnemyOccupied && (dest === src + 9 || dest === src + 7)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Returns an array of one if pawn moves two steps - otherwise returns an empty array.\n    getSrcToDestPath(src, dest) {\n        if (dest === src - 16) {\n            return [src - 8];\n        } else if (dest === src + 16) {\n            return [src + 8];\n        }\n        return [];\n    }\n}","import Piece from './piece.js';\n\nexport default class Queen extends Piece {\n     // Creating a constructor for player. Determining if it is the first or second player and assigning appropriate piece image\n    constructor(player) {\n        super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"));\n    }\n\n    isMovePossible(src, dest) {\n        let mod = src % 8;\n        let diff = 8 - mod;\n\n        return (Math.abs(src - dest) % 9 === 0 || Math.abs(src - dest) % 7 === 0 || (Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff))));\n        }\n\n        getSrcToDestPath(src, dest) {\n            let path = [],\n                pathStart, pathEnd, incrementBy;\n            if (src > dest) {\n                pathStart = dest;\n                pathEnd = src;\n            } else {\n                pathStart = src;\n                pathEnd = dest;\n            }\n            if (Math.abs(src - dest) % 8 === 0) {\n                incrementBy = 8;\n                pathStart += 8;\n            } else if (Math.abs(src - dest) % 9 === 0) {\n                incrementBy = 9;\n                pathStart += 9;\n            } else if (Math.abs(src - dest) % 7 === 0) {\n                incrementBy = 7;\n                pathStart += 7;\n            } else {\n                incrementBy = 1;\n                pathStart += 1;\n            }\n\n            for (let i = pathStart; i < pathEnd; i += incrementBy) {\n                path.push(i);\n            }\n            return path;\n        }\n    }","import Piece from './piece';\n\nexport default class Rook extends Piece {\n    // Creating a constructor for player. Determining if it is the first or second player and assigning appropriate piece image\n    constructor(player) {\n        super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\n    }\n\n    isMovepossible(src, dest) {\n        let mod = src % 8;\n        let diff = 8 - mod;\n        return (Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff)));\n    }\n\n    getSrcToDestPath(src, dest) {\n        let path = [],\n            pathStart, pathEnd, incrementBy;\n        if (src > dest) {\n            pathStart = dest;\n            pathEnd = src;\n        } else {\n            pathStart = src;\n            pathEnd = dest;\n        }\n        if (Math.abs(src - dest) % 8 === 0) {\n            incrementBy = 8;\n            pathStart += 8;\n        } else {\n            incrementBy = 1;\n            pathStart += 1;\n        }\n\n        for (let i = pathStart; i < pathEnd; i += incrementBy) {\n            path.push(i);\n        }\n        return path;\n    }\n}","import Bishop from '../pieces/bishop.js';\nimport King from '../pieces/king.js';\nimport Knight from '../pieces/knight.js';\nimport Pawn from '../pieces/pawn.js';\nimport Queen from '../pieces/queen.js';\nimport Rook from '../pieces/rook.js';\n\n//This Helper Function returns an array of 64 (There are 64 squares on a Chess Board). 32 squares are filled with pieces (The initial positions for game setup)The other 32 squares are null (places that pieces can move to).\n\nexport default function initialiseChessBoard() {\n    const squares = Array(64).fill(null);\n\n    for (let i = 8; i < 16; i++) {\n        squares[i] = new Pawn(2);\n        squares[i + 40] = new Pawn(1);\n    }\n    squares[0] = new Rook(2);\n    squares[7] = new Rook(2);\n    squares[56] = new Rook(1);\n    squares[63] = new Rook(1);\n\n    squares[1] = new Knight(2);\n    squares[6] = new Knight(2);\n    squares[57] = new Knight(1);\n    squares[62] = new Knight(1);\n\n    squares[2] = new Bishop(2);\n    squares[5] = new Bishop(2);\n    squares[58] = new Bishop(1);\n    squares[61] = new Bishop(1);\n\n    squares[3] = new Queen(2);\n    squares[4] = new King(2);\n\n    squares[59] = new Queen(1);\n    squares[60] = new King(1);\n\n    return squares;\n}","import React from 'react';\nimport '../index.css';\nimport Board from './board.js';\nimport FallenSoldiers from './fallen-soldiers.js';\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\n\nexport default class Game extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            squares: initialiseChessBoard(),\n            whiteFallenSoldiers: [],\n            blackFallenSoldiers: [],\n            player: 1,\n            sourceSelection: -1,\n            status: '',\n            turn: 'white'\n        }\n    }\n\n    handleClick(i){\n        const squares = this.state.squares.slice();\n\n        if(this.state.sourceSelection === -1){\n            if(!squares[i] || squares[i].player !== this.state.player){\n                this.setState({status: \"Wrong selection. Player \" + this.state.player + \" must move.\"});\n                if(squares[i]){\n                    squares[i].style = {...squares[i].style, backgroundColor: \"\"};\n                }\n            }\n            else{\n                squares[i].style = {...squares[i].style, backgroundColor:  \"RGB(73, 128, 113)\"};\n                this.setState({\n                    status: \"Choose your placement\",\n                    sourceSelection: i\n                });\n            }\n        }\n        else if(this.state.sourceSelection > -1){\n            squares[this.state.sourceSelection].style = {...squares[this.state.sourceSelection].style, backgroundColor: \"\"};\n            if(squares[i] && squares[i].player === this.state.player){\n                this.setState({\n                    status: \"Illegal move. Choose valid destination.\",\n                    sourceSelection: -1,\n                });\n            }\n            else{\n                const squares = this.state.squares.slice();\n                const whiteFallenSoldiers = this.state.whiteFallenSoldiers.slice();\n                const blackFallenSoldiers = this.state.blackFallenSoldiers.slice();\n                const isDestEnemyOccupied = squares[i]? true : false;\n                const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied);\n                const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\n                const isMoveLegal = this.isMoveLegal(srcToDestPath);\n\n                if(isMovePossible && isMoveLegal){\n                    if(squares[i] !==null){\n                        if(squares[i].player === 1){\n                            whiteFallenSoldiers.push(squares[i]);\n                        }\n                        else{\n                            blackFallenSoldiers.push(squares[i]);\n                        }\n                    }\n                    console.log(\"whiteFallenSoldiers\", whiteFallenSoldiers) ;\n                    console.log(\"blackFallenSoldiers\", blackFallenSoldiers);\n                    squares[i] = squares[this.state.sourceSelection];\n                    squares[this.state.sourceSelection] = null;\n                    let player = this.state.player === 1? 2: 1;\n                    let turn = this.state.turn === 'white'? 'black' : 'white';\n                    this.setState({\n                        sourceSelection: -1,\n                        squares: squares,\n                        whiteFallenSoldiers: whiteFallenSoldiers,\n                        blackFallenSoldiers: blackFallenSoldiers,\n                        player: player,\n                        status: '',\n                        turn: turn\n                    });\n                }\n                else{\n                    this.setState({\n                        status: \"Wrong selection. Choose valid source and destination.\",\n                        sourceSelection: -1,\n                    });\n                }\n            }\n        }\n    }\n\n    //Checking all path indexes are null. For one step move of pawn/others or 'jumping' move of knight array is empty meaning the move is legal. \n    //srcToDestPath is array of board indexes comprising path between src and dest.\n    isMoveLegal(srcToDestPath){\n        let isLegal = true;\n        for(let i = 0; i < srcToDestPath.length; i++){\n            if(this.state.squares[srcToDestPath[i]] !== null){\n                isLegal = false;\n            }\n        }\n        return isLegal;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"game\">\n                    <div className=\"game-board\">\n                        <Board \n                        squares = {this.state.squares}\n                        onClick = {(i) => this.handleClick(i)}\n                        />\n                    </div>\n\n                    <div className=\"game-info\">\n                        <h3>Turn</h3>\n                        <div id=\"player-turn-box\" style={{backgroundColor: this.state.turn}}></div>\n\n                        <div className=\"game-status\">{this.state.status}</div>\n    \n                        <div className=\"fallen-soldiers\">                 \n                            {<FallenSoldiers\n                            whiteFallenSoldiers = {this.state.whiteFallenSoldiers}\n                            blackFallenSoldiers = {this.state.blackFallenSoldiers}\n                                />\n                            }\n                        </div>\n                \n                    </div>\n                </div>\n            </div>\n\n        );\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/game.js'\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}